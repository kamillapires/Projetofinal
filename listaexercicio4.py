# -*- coding: utf-8 -*-
"""ListaExercicio4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qoC3fPXSJuwUABx3a_ssGfZFiKw3Bps3

# üìä Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico

Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.
"""



"""1) Configure o t√≠tulo na barra do navegador, da p√°gina do projeto no Streamlit e descri√ß√£o inicial do projeto (peso: 1,0)

- T√≠tulo na barra (`page_title`): Lista de Exerc√≠cios 4
- T√≠tulo da p√°gina (`header`): Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico
- Descri√ß√£o projeto (`write`): Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.
"""

import streamlit as st

st.set_page_config(
    page_title="Lista de Exerc√≠cios 4")

st.header("Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico")
st.write("Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.")

"""2) Importe os dados do arquivo empresas_dados.csv utilizando pandas e apresente todas as linhas da df (peso: 1,0)

Dica: Utilize `head(len(df))`
"""

import pandas as pd
arquivo = "/content/empresas_dados.csv"
df = pd.read_csv(arquivo, sep=";")
st.dataframe(df.head(len(df)))

"""3) Calcule os indicadores Margem L√≠quida e ROA e salve como novas coluna da df. Depois apresente os dois indicadores no mesmo gr√°fico de linhas, agrupado por Ano  (peso: 1,0)

- Margem L√≠quida = Lucro L√≠quido / Receita L√≠quida * 100
- ROA = Lucro L√≠quido / Ativo Total *  100
"""

df["Margem L√≠quida"] = df["Lucro L√≠quido"] / df["Receita L√≠quida"] * 100
df["ROA"] = df["Lucro L√≠quido"] / df["Ativo Total"] * 100
st.dataframe(df)

df_agrupado = df.groupby('Ano')[['Margem L√≠quida', 'ROA']].mean().reset_index()

fig, ax = plt.subplots()
plt.figure(figsize=(10, 6))
plt.grid(True)
plt.xticks(df_agrupado['Ano'])

plt.plot(df_agrupado['Ano'], df_agrupado['Margem L√≠quida'], marker='o', label='Margem L√≠quida', ax=ax)
plt.plot(df_agrupado['Ano'], df_agrupado['ROA'], marker='o', label='ROA', ax=ax)

plt.title("Margem L√≠quida e ROA ao longo dos anos")
plt.xlabel("Anos")
plt.ylabel("Valores")
plt.legend()
plt.tight_layout()
st.pyplot(fig)

"""4) Utilize o pacote ipeadatapy e fa√ßa busca para encontrar o indicador que traga o IPCA, taxa de varia√ß√£o, em % e anual: (peso: 2,0)

- Baixe os dados no per√≠odo de 2010 a 2024
- Altere o nome da coluna "YEAR" para "Ano"
- Altere o nome da coluna "VALUE ((% a.a.))" para "IPCA"
- Apresente a df para checar se tudo deu certo
"""

!pip install ipeadatapy

#Procurando todos os conjuntos de dados com o codigo ou nome igual a "IPCA"

import ipeadatapy as ip

ip.list_series('IPCA')

#Apresentando detalhes da s√©rie
ip.describe("PRECOS_IPCAG")

#Apresenta√ß√£o dos dados no per√≠odo de 2010 a 2024

ip.timeseries("PRECOS_IPCAG", yearGreaterThan=2009, yearSmallerThan=2025)

ipca_dados = ip.timeseries("PRECOS_IPCAG", yearGreaterThan=2009, yearSmallerThan=2025)
ipca_dados = ipca_dados.rename(columns={"YEAR": "Ano", "VALUE ((% a.a.))": "IPCA"})
st.dataframe(ipca_dados)

"""5) Combine as duas df (Excel e IPEA) em uma nova df e calcule nova coluna chamada Receita Real (peso: 2,0)

- Utilize a fun√ß√£o `pd.merge()` para unificar as duas df utiilizando a coluna Ano como conex√£o (chave prim√°ria) entre elas
- Crie nova coluna chamada Receita Real que ser√° o resultado da Receita L√≠quida de cada ano deduzido o IPCA do ano: `Receita Real = Receitta L√≠quida - ( Receita L√≠quida * (IPCA/100) )`
- Apresente a nova df combinada

"""

#Combinado as duas df

df2 = pd.merge(df, ipca_dados, on='Ano')
st.dataframe(df2)

#Nova df com a nova coluna de Receita Real

df2["Receita Real"] = df2["Receita L√≠quida"] - (df2["Receita L√≠quida"] * (df2["IPCA"]/100))
st.dataframe(df2)

"""6) Crie gr√°fico de linha que apresente as vari√°veis Receita L√≠quida e Receita Real ao longo dos anos (no mesmo gr√°fico) (peso: 1,0)"""

fig, ax = plt.subplots()
plt.figure(figsize=(10, 6))
plt.grid(True)

plt.plot(df2["Ano"], df2["Receita L√≠quida"], marker='o', label='Receita L√≠quida', ax=ax)
plt.plot(df2["Ano"], df2["Receita Real"], marker='o', label='Receita Real', ax=ax)
plt.title("Receita L√≠quida e Receita Real ao longo dos anos")
plt.xlabel("Anos")
plt.ylabel("Valores")
plt.legend()
plt.tight_layout()
st.pyplot(fig)

"""7) Fa√ßa os ajustes necess√°rios e leve este projeto para a web usando GitHub e Streamlit (peso: 2,0)

- Ca√ßa os ajustes necess√°rios no projeto para ser publicado no Streamlit
- Crie novo reposit√≥rio p√∫blico no GitHub e leve os arquivos .py e .csv pra l√°. Aproveite e crie o arquivo requirements.txt com os pacotes utilizados no projeto
- Crie novo projeto no Streamlit e associe ao reposit√≥rio da lista
"""
